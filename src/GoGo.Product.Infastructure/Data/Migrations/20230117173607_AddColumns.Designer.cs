// <auto-generated />
using System;
using GoGo.Product.Infastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoGo.Product.Infastructure.Data.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20230117173607_AddColumns")]
    partial class AddColumns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoGo.Product.Domain.Entities.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AdultPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ChildrenFrom2To5Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ChildrenFrom5To11Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ChildrenUnder2Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PromotionPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte?>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("SeoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalRating")
                        .HasColumnType("int");

                    b.Property<int>("TourDay")
                        .HasColumnType("int");

                    b.Property<int>("TravelLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UtcDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("UtcDateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("GoGo.Product.Domain.Entities.TourBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdultQuantity")
                        .HasColumnType("int");

                    b.Property<string>("BookerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookerFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookerNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChildrenFrom2To5")
                        .HasColumnType("int");

                    b.Property<int?>("ChildrenFrom5To11")
                        .HasColumnType("int");

                    b.Property<int?>("ChildrenUnder2")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TourHasStartDateId")
                        .HasColumnType("int");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UtcDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("UtcDateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("TourBookings");
                });

            modelBuilder.Entity("GoGo.Product.Domain.Entities.TourHasStartDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AdultPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ChildrenFrom2To5Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ChildrenFrom5To11Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ChildrenUnder2Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainSlots")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UtcDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("UtcDateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("TourHasStartDates");
                });

            modelBuilder.Entity("GoGo.Product.Domain.Entities.TourRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FiveStarAmount")
                        .HasColumnType("int");

                    b.Property<int?>("FourStarAmount")
                        .HasColumnType("int");

                    b.Property<int?>("OneStarAmount")
                        .HasColumnType("int");

                    b.Property<int?>("ThreeStarAmount")
                        .HasColumnType("int");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<int?>("TwoStarAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("UtcDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("UtcDateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("TourRatings");
                });

            modelBuilder.Entity("GoGo.Product.Domain.Entities.TourRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("BudgetPerPerson")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstimateCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UtcDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("UtcDateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("TourRequests");
                });

            modelBuilder.Entity("GoGo.Product.Domain.Entities.TourBooking", b =>
                {
                    b.HasOne("GoGo.Product.Domain.Entities.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("GoGo.Product.Domain.Entities.TourHasStartDate", b =>
                {
                    b.HasOne("GoGo.Product.Domain.Entities.Tour", "Tour")
                        .WithMany("TourHasStartDates")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("GoGo.Product.Domain.Entities.TourRating", b =>
                {
                    b.HasOne("GoGo.Product.Domain.Entities.Tour", "Tour")
                        .WithMany("TourRatings")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("GoGo.Product.Domain.Entities.Tour", b =>
                {
                    b.Navigation("TourHasStartDates");

                    b.Navigation("TourRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
